{"ast":null,"code":"var _jsxFileName = \"/home/cedcoss/Desktop/react_training/query-builder/src/pages/QueryBuilder.jsx\";\nimport React from 'react';\nimport { Page, Card, Button, Grid } from '@shopify/polaris';\nimport { useState } from 'react';\nimport Rows from './Rows';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction QueryBuilder(_ref) {\n  let {\n    main,\n    setMain\n  } = _ref;\n\n  const handleGroupData = () => {\n    // setMain([...main, { groupId: Math.floor(Math.random() * 48484874), row: [] }])\n    const newGrp = {\n      groupId: Math.floor(Math.random() * 48484874),\n      row: {\n        rowId: Math.floor(Math.random() * 48484874),\n        sel1: \"\",\n        sel2: \"\",\n        sel3: \"\"\n      }\n    }; // console.log([...main,newGrp]);\n\n    setMain([...main, newGrp]);\n  };\n\n  const handelGroupRemove = (g, group) => {\n    // const updatedData = main.filter(rm => rm.groupId !== g) \n    //  main.map(rm => {\n    //   if (rm.groupId !== g) {\n    //   }\n    // });\n    console.log(group, \"grpindex\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Page, {\n      title: \"Query Builder\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sectioned: true,\n        children: [main.map((group, groupIndex) => {\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: group.groupId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Rows, {\n              group: group,\n              main: main,\n              setMain: setMain\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this)]\n          }, groupIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"addGroup\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            size: \"slim\",\n            outline: true,\n            onClick: handleGroupData,\n            children: \"Add Groups\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"addGroup\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            size: \"slim\",\n            primary: true,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(Grid.Cell, {\n            columnSpan: {\n              xs: 6,\n              sm: 6,\n              md: 6,\n              lg: 12,\n              xl: 12\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"groupBtn\",\n              children: main.length > 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: '#bf0711'\n                },\n                className: \"rmoGroup\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  outline: true,\n                  monochrome: true,\n                  size: \"slim\",\n                  onClick: () => handelGroupRemove(groupIndex),\n                  children: \"Remove Groups\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_c = QueryBuilder;\nexport default QueryBuilder;\n\nvar _c;\n\n$RefreshReg$(_c, \"QueryBuilder\");","map":{"version":3,"names":["React","Page","Card","Button","Grid","useState","Rows","useEffect","QueryBuilder","main","setMain","handleGroupData","newGrp","groupId","Math","floor","random","row","rowId","sel1","sel2","sel3","handelGroupRemove","g","group","console","log","map","groupIndex","xs","sm","md","lg","xl","length","color"],"sources":["/home/cedcoss/Desktop/react_training/query-builder/src/pages/QueryBuilder.jsx"],"sourcesContent":["import React from 'react'\nimport {\n  Page,\n  Card,\n  Button,\n  Grid,\n} from '@shopify/polaris'\nimport { useState } from 'react';\nimport Rows from './Rows';\nimport { useEffect } from 'react';\nfunction QueryBuilder({ main, setMain }) {\n\n  const handleGroupData = () => {\n    // setMain([...main, { groupId: Math.floor(Math.random() * 48484874), row: [] }])\n    const newGrp = {\n      groupId: Math.floor(Math.random() * 48484874), row: {\n        rowId: Math.floor(Math.random() * 48484874),\n        sel1: \"\",\n        sel2: \"\",\n        sel3: \"\",\n      }\n    }\n    // console.log([...main,newGrp]);\n    setMain([...main, newGrp])\n  }\n  const handelGroupRemove = (g,group) => {\n    // const updatedData = main.filter(rm => rm.groupId !== g) \n    //  main.map(rm => {\n    //   if (rm.groupId !== g) {\n    //   }\n    // });\n    console.log(group,\"grpindex\");\n  }\n\n  return (\n    <div>\n      <Page title=\"Query Builder\">\n        <Card sectioned>\n          {main.map((group, groupIndex) => {\n            return (\n              <React.Fragment key={groupIndex}>\n                <p>{group.groupId}</p>\n                <Rows group={group} main={main} setMain={setMain} />\n              </React.Fragment>\n            )\n          }\n          )}\n          <span className='addGroup'>\n            <Button size='slim' outline onClick={handleGroupData} >Add Groups</Button>\n          </span>\n          <span className='addGroup'>\n          {/* onClick={handleDataSave} */}\n            <Button size='slim' primary  >Save</Button>\n          </span>\n          <Grid >\n        <Grid.Cell columnSpan={{ xs: 6, sm: 6, md: 6, lg: 12, xl: 12 }}>\n          <div className='groupBtn'>\n            {main.length > 1 && (\n              <span style={{ color: '#bf0711' }} className=\"rmoGroup\">\n                <Button outline monochrome size='slim' onClick={() => handelGroupRemove(groupIndex)} >Remove Groups</Button>\n              </span>\n            )}\n          </div>\n        </Grid.Cell>\n      </Grid>\n        </Card>\n      </Page>\n    </div >\n  )\n}\n\nexport default QueryBuilder\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}